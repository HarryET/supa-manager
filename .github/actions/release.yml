name: Build and Publish Docker Images

on:
  release:
    types: [published]

jobs:
  build-supa-manager:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push supa-manager image
        run: |
          docker buildx create --use
          docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache --push -t ghcr.io/${{ github.repository }}/supa-manager:latest .

  build-studio:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push studio image
        working-directory: ./studio
        run: |
          docker buildx create --use
          RELEASE_TAG=${{ github.event.release.tag_name }}
          git clone --depth 1 --branch $RELEASE_TAG https://github.com/supabase/supabase.git ./code-$RELEASE_TAG || exit
          for file in ./patches/*.patch; do
            patch -d ./code-$RELEASE_TAG -p1 < $file
          done
          cp -r ./files/* ./code-$RELEASE_TAG/*
          cd ./code-$RELEASE_TAG/apps/studio || exit
          docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache --push -t ghcr.io/${{ github.repository }}/studio:latest .
          cd ../../..
          rm -rf ./code-$RELEASE_TAG
